import { existsSync, readFileSync, writeFileSync } from 'fs'

import { CommandTypes } from '../enums/command-types.enum';
import { HistoryItem } from '../models/history-item';

const HISTORY_PATH = './command_history.json'

let history: HistoryItem[] = []

if (existsSync(HISTORY_PATH))
  history = (JSON.parse(readFileSync(HISTORY_PATH, 'utf-8')) as HistoryItem[])

export class HistoryService {
  add(command: string, type: CommandTypes, output: string) {
    const item = new HistoryItem();
    item.id = history.length + 1
    item.date = new Date()
    item.command = command
    item.output = output
    item.type = type
    history.push(item)
    writeFileSync(HISTORY_PATH, JSON.stringify(history))
  }

  get() {
    return history.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())
  }
}