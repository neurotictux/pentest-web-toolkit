import * as bodyParser from 'body-parser'
import * as express from 'express'
import * as fileUpload from 'express-fileupload'
import { createServer } from 'http'
import * as socketio from 'socket.io'
import { IRequestFile } from './interfaces'
import { FileService, HistoryService, SocketService } from './service/'

const app = express()
const socketService = new SocketService()
const fileService = new FileService()

app.use(fileUpload({
    createParentPath: true
}))

app.use(bodyParser.json())

app.get('/api/history', (req, res) => {
    const history = new HistoryService()
    res.json(history.get())
})

app.get('/api/history/:id', (req, res) => {
    const history = new HistoryService()
    res.json(history.get())
})

app.post('/api/upload', (req, res) => {
    const wordlist = req.files.wordlist as IRequestFile
    if (wordlist) {
        fileService.saveWordlist(wordlist)
        res.end()
    } else
        res.status(400).end('Invalid file')
})

app.get('/api/wordlists', (req, res) => res.json(fileService.listWordlists()))

const server = createServer(app)
const io = socketio(server)

io.on('connection', client => socketService.addClient(client))

server.listen(8000)