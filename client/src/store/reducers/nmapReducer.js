import { NmapActions } from '../actions'

const INITIAL_STATE = {
  nmapBannerGrabbingOutput: '',
  nmapBannerGrabbingRunnig: false,
  nmapNetworkSweepingOutput: '',
  nmapNetworkSweepingRunning: false,
}

export const nmapReducer = (state = INITIAL_STATE, action) => {
  switch (action.type) {
    case NmapActions.NMAP_NETWORK_SWEEPING_START:
      return {
        ...state,
        nmapNetworkSweepingOutput: action.payload,
        nmapNetworkSweepingRunning: true
      }
    case NmapActions.NMAP_NETWORK_SWEEPING_DATA:
      return {
        ...state,
        nmapNetworkSweepingOutput: state.nmapNetworkSweepingOutput + action.payload,
        nmapNetworkSweepingRunning: true
      }
    case NmapActions.NMAP_NETWORK_SWEEPING_END:
      return {
        ...state,
        nmapNetworkSweepingOutput: state.nmapNetworkSweepingOutput + action.payload,
        nmapNetworkSweepingRunning: false
      }
    case NmapActions.NMAP_BANNER_GRABBING_START:
      return {
        ...state,
        nmapBannerGrabbingOutput: action.payload,
        nmapBannerGrabbingRunnig: true
      }
    case NmapActions.NMAP_BANNER_GRABBING_DATA:
      return {
        ...state,
        nmapBannerGrabbingOutput: state.nmapBannerGrabbingOutput + action.payload,
        nmapBannerGrabbingRunnig: true
      }
    case NmapActions.NMAP_BANNER_GRABBING_END:
      return {
        ...state,
        nmapBannerGrabbingOutput: state.nmapBannerGrabbingOutput + action.payload,
        nmapBannerGrabbingRunnig: false
      }
    default:
      return state
  }
}